// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poke.Server.Data;

#nullable disable

namespace Poke.Server.Data.Migrations
{
    [DbContext(typeof(PokeContext))]
    [Migration("20250502024905_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Poke.Server.Data.Models.ApplyValue", b =>
                {
                    b.Property<int>("ApplyValueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToProperty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApplyValueID");

                    b.ToTable("ApplyValue");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.BaseSkill", b =>
                {
                    b.Property<int>("BaseSkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplyValueID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BaseUnitID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillCostID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BaseSkillID");

                    b.HasIndex("ApplyValueID");

                    b.HasIndex("BaseUnitID");

                    b.HasIndex("SkillCostID");

                    b.ToTable("BaseSkills");

                    b.HasDiscriminator().HasValue("BaseSkill");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Poke.Server.Data.Models.BaseUnit", b =>
                {
                    b.Property<int>("BaseUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<int>("Life")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mana")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeamID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BaseUnitID");

                    b.HasIndex("TeamID");

                    b.ToTable("BaseUnits");

                    b.HasDiscriminator().HasValue("BaseUnit");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Match", b =>
                {
                    b.Property<int>("MatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentTeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NextTeamTeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.HasKey("MatchID");

                    b.HasIndex("CurrentTeamID");

                    b.HasIndex("NextTeamTeamID");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TeamID");

                    b.HasIndex("UserID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Skills.Cleave", b =>
                {
                    b.HasBaseType("Poke.Server.Data.Models.BaseSkill");

                    b.HasDiscriminator().HasValue("Cleave");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Skills.Fireball", b =>
                {
                    b.HasBaseType("Poke.Server.Data.Models.BaseSkill");

                    b.HasDiscriminator().HasValue("Fireball");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Units.Mage", b =>
                {
                    b.HasBaseType("Poke.Server.Data.Models.BaseUnit");

                    b.HasDiscriminator().HasValue("Mage");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Units.Warrior", b =>
                {
                    b.HasBaseType("Poke.Server.Data.Models.BaseUnit");

                    b.HasDiscriminator().HasValue("Warrior");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.BaseSkill", b =>
                {
                    b.HasOne("Poke.Server.Data.Models.ApplyValue", "ApplyValue")
                        .WithMany()
                        .HasForeignKey("ApplyValueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poke.Server.Data.Models.BaseUnit", null)
                        .WithMany("Skills")
                        .HasForeignKey("BaseUnitID");

                    b.HasOne("Poke.Server.Data.Models.ApplyValue", "SkillCost")
                        .WithMany()
                        .HasForeignKey("SkillCostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplyValue");

                    b.Navigation("SkillCost");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.BaseUnit", b =>
                {
                    b.HasOne("Poke.Server.Data.Models.Team", null)
                        .WithMany("Units")
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Match", b =>
                {
                    b.HasOne("Poke.Server.Data.Models.Team", "CurrentTeam")
                        .WithMany()
                        .HasForeignKey("CurrentTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poke.Server.Data.Models.Team", "NextTeam")
                        .WithMany()
                        .HasForeignKey("NextTeamTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentTeam");

                    b.Navigation("NextTeam");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Team", b =>
                {
                    b.HasOne("Poke.Server.Data.Models.User", "User")
                        .WithMany("Teams")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.BaseUnit", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.Team", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Poke.Server.Data.Models.User", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}

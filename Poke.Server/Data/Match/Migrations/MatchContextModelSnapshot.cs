// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poke.Server.Data.Match;

#nullable disable

namespace Poke.Server.Data.Match.Migrations
{
    [DbContext(typeof(MatchContext))]
    partial class MatchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("match")
                .HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Poke.Server.Data.Match.Models.Match", b =>
                {
                    b.Property<Guid>("MatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentUserID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMatchOver")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RandomSeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team01ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team02ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserWinnerID")
                        .HasColumnType("TEXT");

                    b.HasKey("MatchID");

                    b.ToTable("match_matches", "match");
                });

            modelBuilder.Entity("Poke.Server.Data.Match.Models.Play", b =>
                {
                    b.Property<int>("PlayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MatchID")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MatchID1")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetIDs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitInActionID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayID");

                    b.HasIndex("MatchID1");

                    b.ToTable("match_plays", "match");
                });

            modelBuilder.Entity("Poke.Server.Data.Match.Models.Play", b =>
                {
                    b.HasOne("Poke.Server.Data.Match.Models.Match", "Match")
                        .WithMany("Plays")
                        .HasForeignKey("MatchID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Poke.Server.Data.Match.Models.Match", b =>
                {
                    b.Navigation("Plays");
                });
#pragma warning restore 612, 618
        }
    }
}
